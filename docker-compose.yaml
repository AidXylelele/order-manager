version: "3"
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: App.Dockerfile
    container_name: app
    restart: unless-stopped
    mem_limit: 512M
    tty: true
    depends_on:
      - mysqldb
      - redis
    volumes:
      - ./storage:/var/www/html/storage
      - ./public:/var/www/html/public
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  nginx:
    build:
      context: .
      dockerfile: Nginx.Dockerfile
    container_name: nginx
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    volumes:
      - ./storage:/var/www/html/storage
      - ./public:/var/www/html/public
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  #Mysql Service 
  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./.db:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  #Redis Service    
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 60 1000 --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./.redis:/data
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
